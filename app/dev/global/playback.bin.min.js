document.addEventListener('DOMContentLoaded', function() {
    const audio = new Audio(); // Create an audio object
    const playPauseButton = document.getElementById('play-pause');
    const albumArt = document.getElementById('album-art');
    const previousButton = document.getElementById('previous');
    const nextButton = document.getElementById('next');
    const repeatButton = document.getElementById('repeat');
    const randomButton = document.getElementById('random');
    
    // Music and album art paths
    const musicPath = "../app/assets/audio/bgm/";
    const albumArtPath = "../app/assets/audio/bgm/album_arts/";

    // List of music files and corresponding album art
    const tracks = [
        { file: 'bgm_1.mp3', art: 'bgm_1.jpg' },
        { file: 'bgm_2.mp3', art: 'bgm_2.jpg' },
        { file: 'bgm_3.mp3', art: 'bgm_3.jpg' },
        { file: 'bgm_4.mp3', art: 'bgm_4.jpg' },
        { file: 'bgm_5.mp3', art: 'bgm_5.jpg' }
    ];

    let currentTrackIndex = 0;
    let isPlaying = false;

    // Function to load the track based on the current index
    function loadTrack() {
        const currentTrack = tracks[currentTrackIndex];
        audio.src = musicPath + currentTrack.file;
        albumArt.src = albumArtPath + currentTrack.art;
    }

    // Function to play or pause the music
    function togglePlayPause() {
        if (isPlaying) {
            audio.pause();
            playPauseButton.classList.remove('fa-pause-circle');
            playPauseButton.classList.add('fa-play-circle');
        } else {
            audio.play();
            playPauseButton.classList.remove('fa-play-circle');
            playPauseButton.classList.add('fa-pause-circle');
        }
        isPlaying = !isPlaying;
    }

    // Function to play the next track
    function nextTrack() {
        currentTrackIndex = (currentTrackIndex + 1) % tracks.length; // Loop back to the first track
        loadTrack();
        if (isPlaying) {
            audio.play(); // Play immediately after loading the track
        }
    }

    // Function to play the previous track
    function previousTrack() {
        currentTrackIndex = (currentTrackIndex - 1 + tracks.length) % tracks.length; // Loop to the last track
        loadTrack();
        if (isPlaying) {
            audio.play(); // Play immediately after loading the track
        }
    }

    // Function to repeat the current track
    function toggleRepeat() {
        audio.loop = !audio.loop; // Toggle the loop state
        if (audio.loop) {
            repeatButton.classList.add('active'); // Optional: add an active class for styling
        } else {
            repeatButton.classList.remove('active');
        }
    }

    // Function to play a random track
    function randomTrack() {
        currentTrackIndex = Math.floor(Math.random() * tracks.length); // Choose a random track
        loadTrack();
        if (isPlaying) {
            audio.play(); // Play immediately after loading the track
        }
    }

    // Event listeners for buttons
    playPauseButton.addEventListener('click', togglePlayPause);
    nextButton.addEventListener('click', nextTrack);
    previousButton.addEventListener('click', previousTrack);
    repeatButton.addEventListener('click', toggleRepeat);
    randomButton.addEventListener('click', randomTrack);

    // Load the first track and autoplay it
    loadTrack();
    audio.play(); // Start playing immediately when the page loads

    // Event listener for when the current track ends to automatically play the next track
    audio.addEventListener('ended', function() {
        nextTrack(); // Automatically play the next track when the current one ends
    });
});
